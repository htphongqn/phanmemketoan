using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using ketoansoft.app.Components.clsVproUtility;
using ketoansoft.app.Class.Global;
using ketoansoft.app.Class.Data;

namespace ketoansoft.app
{
    public partial class SOCTCN11 : Form
    {
        private dbVstoreAppDataContext _db = new dbVstoreAppDataContext(Const.builder.ConnectionString);
        private KT_CTuGocRepo _KT_CTuGocRepo = new KT_CTuGocRepo();
        private KTTKRepo _KTTKRepo = new KTTKRepo();
        private KTDTPNRepo _KTDTPNRepo = new KTDTPNRepo();
        public SOCTCN11()
        {
            InitializeComponent();
        }

        private void SOCTCN11_Load(object sender, EventArgs e)
        {
            loaddtpNgay();
            LoadTK();
            LoadDT();
            cboThang.Text = DateTime.Now.Month.ToString();
        }

        #region load data
        private void LoadTK()
        {
            _KTTKRepo = new KTTKRepo();

            cboTaikhoan.DisplayMember = "MA_TK";
            cboTaikhoan.ValueMember = "ID";
            cboTaikhoan.DropDownColumns = "MA_TK,TEN_TK";
            cboTaikhoan.DataSource = _KTTKRepo.GetAll();
            cboTaikhoan.SelectedIndex = -1;
        }
        private void cboTaikhoan_DataColumnCreated(object sender, DevComponents.DotNetBar.Controls.DataColumnEventArgs e)
        {
            DevComponents.AdvTree.ColumnHeader header = e.ColumnHeader;
            if (header.DataFieldName == "MA_TK")
            {
                header.Width.Relative = 30; // 20% of available width
            }
            else
            {
                header.Width.Relative = 70;
            }
        }
        private void LoadDT()
        {
            _KTDTPNRepo = new KTDTPNRepo();
            cboMaDT.DisplayMember = "MA_DTPN";
            cboMaDT.ValueMember = "ID";
            cboMaDT.DropDownColumns = "MA_DTPN,TEN_DTPN";
            cboMaDT.DataSource = _KTDTPNRepo.GetAll();
            cboMaDT.SelectedIndex = -1;
        }
        private void cboMaDT_DataColumnCreated(object sender, DevComponents.DotNetBar.Controls.DataColumnEventArgs e)
        {
            DevComponents.AdvTree.ColumnHeader header = e.ColumnHeader;
            if (header.DataFieldName == "MA_DTPN")
            {
                header.Width.Relative = 30; // 20% of available width
            }
            else
            {
                header.Width.Relative = 70;
            }
        }
        #endregion

        #region process datetime
        private DateTime GetFirstDayOfMonth(DateTime dtInput)
        {
            DateTime dtResult = dtInput;
            dtResult = dtResult.AddDays((-dtResult.Day) + 1);
            return dtResult;
        }
        private DateTime GetFirstDayOfMonth(int iMonth)
        {
            DateTime dtResult = new DateTime(DateTime.Now.Year, iMonth, 1);
            dtResult = dtResult.AddDays((-dtResult.Day) + 1);
            return dtResult;
        }
        private DateTime GetLastDayOfMonth(DateTime dtInput)
        {
            DateTime dtResult = dtInput;
            dtResult = dtResult.AddMonths(1);
            dtResult = dtResult.AddDays(-(dtResult.Day));
            return dtResult;
        }
        private DateTime GetLastDayOfMonth(int iMonth)
        {
            DateTime dtResult = new DateTime(DateTime.Now.Year, iMonth, 1);
            dtResult = dtResult.AddMonths(1);
            dtResult = dtResult.AddDays(-(dtResult.Day));
            return dtResult;
        }
        private void loaddtpNgay()
        {
            dtpTuNgay.Value = GetFirstDayOfMonth(DateTime.Now);
            dtpDenngay.Value = GetLastDayOfMonth(DateTime.Now);
            dtNgayin.Value = DateTime.Now;
        }
        private void cboThang_SelectedIndexChanged(object sender, EventArgs e)
        {
            dtpTuNgay.Value = GetFirstDayOfMonth(Utils.CIntDef(cboThang.Text, 1));
            dtpDenngay.Value = GetLastDayOfMonth(Utils.CIntDef(cboThang.Text, 1));
        }
        #endregion

        #region btn Click
        private void btnThoat_Click(object sender, EventArgs e)
        {
            this.Close();
        }
        private void btnIn_Click(object sender, EventArgs e)
        {
            DataTable dt = new DataTable();
            dt.Columns.AddRange(new DataColumn[] { new DataColumn("DTPN"), new DataColumn("TK"), new DataColumn("LOAI"), new DataColumn("SO"), new DataColumn("NGAY"), new DataColumn("MADM"), 
                new DataColumn("DIENGIAI"), new DataColumn("DONVI"), new DataColumn("SOLUONG"), new DataColumn("DAI"), new DataColumn("RONG"), 
                new DataColumn("SOM2"), new DataColumn("DONGIA"), new DataColumn("TKDU"), new DataColumn("NO"), new DataColumn("CO") });

            _db = new dbVstoreAppDataContext(Const.builder.ConnectionString);
            var list = this._db.KT_CTuGocs.Where(u => u.NGAY_CTU.Value != null && u.NGAY_CTU.Value.Date >= dtpTuNgay.Value.Date && u.NGAY_CTU.Value.Date <= dtpDenngay.Value.Date 
                && (u.TK_NO == cboTaikhoan.Text || cboTaikhoan.Text == "") && (u.MA_DTPN_NO == cboMaDT.Text || cboMaDT.Text == ""));
            foreach (var item in list)
            {
                DataRow dr = dt.NewRow();
                dr["DTPN"] = item.MA_DTPN_NO;
                dr["TK"] = item.TK_NO;
                dr["LOAI"] = item.MA_CTU;
                dr["SO"] = item.SO_CTU;
                dr["NGAY"] = item.NGAY_CTU;
                dr["MADM"] = item.MA_DM_XUAT;
                dr["DIENGIAI"] = item.DIEN_GIAI;
                dr["DONVI"] = item.DON_VI1;
                dr["SOLUONG"] = item.SO_LUONG;
                dr["DAI"] = "";
                dr["RONG"] = "";
                dr["SOM2"] = "";
                dr["DONGIA"] = item.DON_GIA_VND;
                dr["TKDU"] = item.TK_CO;
                dr["NO"] = "";
                dr["CO"] = "";
                dt.Rows.Add(dr);
            }
            //List<string> listDTPB = new List<string>();
            //foreach (var item in list)
            //{
            //    bool b = listDTPB.Exists(a => a == item.MA_DTPN_NO);
            //    if (!b)
            //    {
            //        listDTPB.Add(item.MA_DTPN_NO);
            //    }
            //}
            var listDTPB = list.Select(a=>a.MA_DTPN_NO).Distinct().ToList();

            ExcelUtlity Utlity = new ExcelUtlity();
            if(rdMauchuan.Checked)
                Utlity.WriteDataTableToExcel_SOCTCN11_Mauchuan(dt, cboTaikhoan.Text, cboMaDT.Text, dtpTuNgay.Value, dtpDenngay.Value, dtNgayin.Value);
            else if(rdInchitietquycach.Checked)
                Utlity.WriteDataTableToExcel_SOCTCN30_InChiTietQuyCach(dt, cboTaikhoan.Text, cboMaDT.Text, dtpTuNgay.Value, dtpDenngay.Value, dtNgayin.Value);
            else if (rdViewtatcaDT.Checked)
                Utlity.WriteDataTableToExcel_SOCTCN11_03_V_ViewtatcaDT(dt, dtpTuNgay.Value, dtpDenngay.Value, dtNgayin.Value, listDTPB);
        }
        #endregion




    }
}
