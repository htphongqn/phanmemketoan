using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Windows.Forms;
using DevComponents.DotNetBar;
using ketoansoft.app.Class.Data;
using DevExpress.XtraEditors;
using ketoansoft.app.Components.clsVproUtility;
using System.Collections;

namespace ketoansoft.app
{
    public partial class fCaiThongSo : DevComponents.DotNetBar.Metro.MetroForm
    {
        dbVstoreAppDataContext db = new dbVstoreAppDataContext();
        CFGRepo _CFGRepo = new CFGRepo();
        ArrayList list_row_changed = new ArrayList();
        List<int> arr = new List<int>();
        public fCaiThongSo()
        {
            InitializeComponent();
        }

        #region Data
        private void Load_Data()
        {
            try
            {
                gridData.DataSource = _CFGRepo.GetAll();
            }
            catch (Exception) { }
        }
        private void Save_Data()
        {
            //foreach (string i in list_row_changed)
            //{
            //    int _id = Utils.CIntDef(i[0].ToString(), 0);
            //    int _ID = Utils.CIntDef(gridView1.GetRowCellValue(_id, "ID").ToString(), 0);
            //    string _TEN = gridView1.GetRowCellValue(_id, "TEN").ToString();
            //    string _GIA_TRI = gridView1.GetRowCellValue(_id, "GIA_TRI").ToString();
            //    string _GHI_CHU = gridView1.GetRowCellValue(_id, "GHI_CHU").ToString();
            //    _CFGRepo.Update(_ID, _TEN, _GIA_TRI, _GHI_CHU);
            //}
            //list_row_changed.Clear();

            foreach (int pos in arr)
            {
                int _ID = Utils.CIntDef(gridView1.GetRowCellValue(pos, "ID").ToString(), 0);
                string _TEN = gridView1.GetRowCellValue(pos, "TEN").ToString();
                string _GIA_TRI = gridView1.GetRowCellValue(pos, "GIA_TRI").ToString();
                string _GHI_CHU = gridView1.GetRowCellValue(pos, "GHI_CHU").ToString();
                _CFGRepo.Update(_ID, _TEN, _GIA_TRI, _GHI_CHU);
            }
            arr.Clear();
        }
        #endregion

        #region Button
        private void btnSave_Click(object sender, EventArgs e)
        {
            Save_Data();
        }
        #endregion

        #region Event
        private void gridData_Load(object sender, EventArgs e)
        {
            Load_Data();
        }
        private void gridView1_InvalidRowException(object sender, DevExpress.XtraGrid.Views.Base.InvalidRowExceptionEventArgs e)
        {
            // Sự kiện này để người ta không chuyển qua dòng khác được khi có lỗi xảy ra nè
            // Nó nhận giá trị e.Valid của gridView1_ValidateRow để ứng xử
            // neu e,Valid =True thì nó cho chuyển qua dòng khác hoặc làm tác vụ khác
            // và ngược lại
             e.ExceptionMode = DevExpress.XtraEditors.Controls.ExceptionMode.NoAction;
        }
        private void gridView1_CellValueChanged(object sender, DevExpress.XtraGrid.Views.Base.CellValueChangedEventArgs e)
        {
            BeginInvoke(new MethodInvoker(delegate
            {
                //if (!list_row_changed.Contains(gridView1.FocusedRowHandle.ToString()))
                //{
                //    list_row_changed.Add(gridView1.FocusedRowHandle.ToString());
                //}
                if (arr.Find(a=>a == gridView1.FocusedRowHandle) != gridView1.FocusedRowHandle)
                {
                    arr.Add(gridView1.FocusedRowHandle);
                }
            }));
        }
        #endregion
        
    }
}